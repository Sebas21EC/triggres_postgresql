-- ********************** TRIGGER PARA CONTROLAR LAS ACTUALIZACIONE DE LOS PILOTOS EN LA TABLA VUELOS **********

SELECT * FROM VUELOS;
SELECT COUNT(*) FROM VUELOS WHERE FECHAVUE='2022-12-15' AND CODIGOPIL='PIL-01';

-- CREAR TABLA LOG PARA ACTUALIZACONES DE PILOTO EN VUELOS
CREATE TABLE LOG_PILOTOS_VUELOS (
CODIGO_VUELO TEXT,
FECHA_VUELO DATE,
CODIGO_PILOTO_ANTIGUO TEXT,
CODIGO_PILOTO_NUEVO TEXT
USUARIO_MODIFICADOR VARCHAR(250),
FECHA_CAMBIO DATE
);


-- CREAR FUNCION PARA TRIGGER
CREATE OR REPLACE FUNCTION SP_TEST() RETURNS TRIGGER
	AS 
	$$ 
	DECLAREs
		usuario varchar(250):=CURRENT_USER;
		fecha date:= CURRENT_DATE;
		
	BEGIN
		IF ((SELECT COUNT(*) FROM VUELOS WHERE FECHAVUE=OLD.FECHAVUE AND CODIGOPIL=NEW.CODIGOPIL)>0) THEN
			RAISE NOTICE 'EL PILOTO CON EL IDENTFICADOR % YA SE ENCUENTRA REGISTRADO EN EL VUELO %',NEW.CODIGOPIL ,OLD.CODIGOVUE;
			ROLLBACK ;
		ELSE
			INSERT INTO LOG_PILOTOS_VUELOS VALUES (OLD.CODIGOVUE,OLD.FECHAVUE,OLD.CODIGOPIL,NEW.CODIGOPIL,usuario,fecha);
			RAISE NOTICE 'EL PILOTO CON EL IDENTFICADOR % HA SIDO CAMBIADO POR EL PILOTO CON EL IDENTIFICADOR % PARA EL VUELO EN EL VUELO %', OLD.CODIGOPIL ,NEW.CODIGOPIL, OLD.CODIGOVUE;
			RETURN NEW;
		END IF;
	END
	$$
	LANGUAGE plpgsql;
	
-- CREAR TRIGGER
CREATE TRIGGER TR_UPDATE_PILO_ON_VUEL BEFORE UPDATE ON VUELOS
FOR EACH ROW
EXECUTE PROCEDURE SP_TEST();

-- BORRAR TRIGGER Y FUNCION
DROP TRIGGER TR_UPDATE_PILO_ON_VUEL ON VUELOS;
DROP FUNCTION SP_TEST;

-- USO DEL TRIGGER
SELECT * FROM VUELOS;
UPDATE VUELOS SET CODIGOPIL='PIL-01' WHERE CODIGOVUE='VUE-01';
SELECT * FROM LOG_PILOTOS_VUELOS;





-- ****Ejercicio 02 ****
SELECT CHAR_LENGTH ('chichiii');
declare nombre varchar(250):= select SUBSTRING ('chichii',2,4);
select SUBSTRING ('chichii',0,2);
select SUBSTRING ('chichii',1,1);
SELECT CAST(CHAR_LENGTH( SUBSTRING ('chichii',2,4)) AS DECIMAL)+1;
SELECT * FROM CLIENTES3


-- CREAR TABLA LOG PARA ACTUALIZACONES DE LA CEDULA DE LOS PILOTOS
CREATE TABLE LOG_CEDULA_CLIENTES (
CODIGO_CLIENTE_ANTIGUO TEXT,
CODIGO_CLIENTE_NUEVO TEXT,
NOMBRE_CLIENTE TEXT,
APELLIDO_CLIENTE TEXT,
USUARIO_MODIFICADOR VARCHAR(250),
FECHA_CAMBIO DATE
);


-- CREAR FUNCION PARA TRIGGER
CREATE OR REPLACE FUNCTION SP_UPDATE_CEDULA_CLIENTES() RETURNS TRIGGER
AS 
	$$ 
	DECLARE
		usuario varchar(250):=CURRENT_USER;
		fecha date:= CURRENT_DATE;
		tamanio_cedula INT:=CHAR_LENGTH(new.codigocli);
		-- 1004733695
		digito_provincia INT:= CAST( SUBSTRING(new.codigocli,1,2) AS DECIMAL);
		ultimo_digito INT:=CAST( SUBSTRING(new.codigocli,10,1) AS DECIMAL);
		
		numero_1 INT:=CAST( SUBSTRING(new.codigocli,1,1) AS DECIMAL)*2;
		numero_3 INT:=CAST( SUBSTRING(new.codigocli,3,1) AS DECIMAL)*2;
		numero_5 INT:=CAST( SUBSTRING(new.codigocli,5,1) AS DECIMAL)*2;
		numero_7 INT:=CAST( SUBSTRING(new.codigocli,7,1) AS DECIMAL)*2;		
		numero_9 INT:=CAST( SUBSTRING(new.codigocli,9,1) AS DECIMAL)*2;
		
		numero_2 INT:=CAST( SUBSTRING(new.codigocli,2,1) AS DECIMAL);
		numero_4 INT:=CAST( SUBSTRING(new.codigocli,4,1) AS DECIMAL);
		numero_6 INT:=CAST( SUBSTRING(new.codigocli,6,1) AS DECIMAL);
		numero_8 INT:=CAST( SUBSTRING(new.codigocli,8,1) AS DECIMAL);
		
		suma_pares INT=numero_2+numero_4+numero_6+numero_8;
		suma_impares INT:=0;
		suma_total INT:= 0;
		primer_digito_suma INT:=0;
		decena INT:=0;
		digito_validador INT:=0;

		
	BEGIN
		IF (digito_provincia<1 OR digito_provincia>24) THEN 
			RAISE NOTICE 'lA CEDULA INGRESA ES INCORRECTA, CODIGO REGIONAL';
			ROLLBACK;
		END IF;
	
		IF (numero_1>9) THEN numero_1:= numero_1-9; END IF;
		IF (numero_3>9) THEN numero_3:= numero_3-9; END IF;
		IF (numero_5>9) THEN numero_5:= numero_5-9; END IF;
		IF (numero_7>9) THEN numero_7:= numero_7-9; END IF;
		IF (numero_9>9) THEN numero_9:= numero_9-9; END IF;

		suma_impares :=numero_1+numero_3+numero_5+numero_7+numero_9;
		suma_total := suma_pares + suma_impares;
		primer_digito_suma:=CAST( SUBSTRING(suma_total::text,1,1) AS DECIMAL);
		decena :=(primer_digito_suma+1)*10;
		digito_validador :=decena-suma_total;
			
		RAISE NOTICE 'Ultimo digito calculado: %, ultimo digito estraido %',digito_validador::text,ultimo_digito::text ;
			
		IF((digito_validador::text)='10')THEN
			digito_validador:=0;
		END IF;
			
		IF((digito_validador::text)=(ultimo_digito::text)) THEN
			INSERT INTO LOG_CEDULA_CLIENTES VALUES (OLD.CODIGOCLI,NEW.CODIGOCLI,OLD.NOMBRECLI,OLD.APELLIDOCLI,usuario,fecha);
			RAISE NOTICE 'LA CEDULA % DEL CLIENTE % HA SIDO MODIFICADA POR %',OLD.CODIGOCLI,OLD.NOMBRECLI,NEW.CODIGOCLI;
			RETURN NEW;
		ELSE
			RAISE NOTICE 'NO SE LOGRO ACTUALIZAR DEBIDO A QUE LA CEDULA INGRESA ES INCORRECTA';
			ROLLBACK ;
		END IF;
	END
	$$
	LANGUAGE plpgsql;

-- CREAR TRIGGER
CREATE TRIGGER TR_UPDATE_CEDULA_CLIENTE BEFORE UPDATE ON CLIENTES
FOR EACH ROW
EXECUTE PROCEDURE SP_UPDATE_CEDULA_CLIENTES();

--BORRAR OBJETOS
DROP TABLE LOG_CEDULA_CLIENTES;
DROP TRIGGER TR_UPDATE_CEDULA_CLIENTE ON CLIENTES;
DROP FUNCTION SP_UPDATE_CEDULA_CLIENTES;
-- EJECUCION

SELECT * FROM CLIENTES;

DELETE FROM CLIENTES WHERE CODIGOCLI ='10';
INSERT INTO CLIENTES VALUES ('1004733695','SEBASTIAN','CARLOSAMA','escarlosamat@utn.edu.ec','0959862753','IBARRA - ECUADOR');



UPDATE CLIENTES SET CODIGOCLI='1004125892' WHERE CODIGOCLI='1004733695';
SELECT * FROM LOG_CEDULA_CLIENTES;
UPDATE CLIENTES SET CODIGOCLI='1004733695' WHERE CODIGOCLI='1004125892';

